# name: C/C++ CI

# on:
#   push:
#     branches: [ "main" ]
#   pull_request:
#     branches: [ "main" ]

# jobs:
#   build:

#     runs-on: ubuntu-latest

#     steps:
#     - uses: actions/checkout@v4
#     - name: make
#       run: cmake -B build -S .
#     - name: make check
#       run: cmake --build build

name: Build C++ Project in Docker

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    name: Build with Docker on Self-hosted Runner
    runs-on: self-hosted

    steps:
      - name: Generate timestamp
        id: gen_time
        run: echo "ts=$(date +'%Y%m%d_%H%M%S')" >> "$GITHUB_OUTPUT"

      - name: Checkout repository to dynamic path
        uses: actions/checkout@v4
        with:
          path: my-code-${{ steps.gen_time.outputs.ts }}

      - name: Show checked-out path
        run: ls -l
      - name: Print working directory
        run: echo "${PWD}"
      - name: Print working directorygithub 
        run: echo "${GITHUB_WORKSPACE}"        
      - name: Build inside Docker and output artifact
        run: |
          export SRC_DIR="${GITHUB_WORKSPACE}/my-code-${{ steps.gen_time.outputs.ts }}"
          echo "${SRC_DIR}"        
          ls -l "${SRC_DIR}"        
          mkdir "${SRC_DIR}/build"        
          docker run --rm \
            -v "${SRC_DIR}:/workspace" \
            -v "${SRC_DIR}/build:/output" \
            --entrypoint bash davidwu-base-gcc:1.0  -c "
              cd /workspace &&
              mkdir -p build &&
              cd build &&
              cmake .. &&
              make &&
              chmod -R 777 /workspace/build/* &&
              echo done"
      - name: Clean up work directory
        run: |
          echo "${SRC_DIR}/build"  # 清理工作目录
          # rm -rf ${SRC_DIR}/build/*  # 清理工作目录